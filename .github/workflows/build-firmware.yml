name: Build Firmware for All Device Types

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device_config:
          - name: "TD01"
            config: "CONFIG_DEVICE_TD01=y"
            disable: ["CONFIG_DEVICE_DIANJI", "CONFIG_DEVICE_QTZ", "CONFIG_DEVICE_ZIDONGSUO"]
          - name: "DIANJI"
            config: "CONFIG_DEVICE_DIANJI=y"
            disable: ["CONFIG_DEVICE_TD01", "CONFIG_DEVICE_QTZ", "CONFIG_DEVICE_ZIDONGSUO"]
          - name: "QTZ"
            config: "CONFIG_DEVICE_QTZ=y"
            disable: ["CONFIG_DEVICE_TD01", "CONFIG_DEVICE_DIANJI", "CONFIG_DEVICE_ZIDONGSUO"]
          - name: "ZIDONGSUO"
            config: "CONFIG_DEVICE_ZIDONGSUO=y"
            disable: ["CONFIG_DEVICE_TD01", "CONFIG_DEVICE_DIANJI", "CONFIG_DEVICE_QTZ"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Setup ESP-IDF
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: v5.1.2
        target: esp32c3

    - name: Configure device type
      run: |
        # 复制默认配置
        cp sdkconfig.defaults.esp32c3 sdkconfig
        
        # 禁用所有设备类型
        for config in ${{ join(matrix.device_config.disable, ' ') }}; do
          sed -i "s/^${config}=y/# ${config} is not set/g" sdkconfig
          echo "# ${config} is not set" >> sdkconfig
        done
        
        # 启用当前设备类型
        echo "${{ matrix.device_config.config }}" >> sdkconfig
        
        # 显示当前配置
        echo "Current device configuration:"
        grep -E "CONFIG_DEVICE_(TD01|DIANJI|QTZ|ZIDONGSUO)" sdkconfig || true

    - name: Build firmware
      run: |
        . $IDF_PATH/export.sh
        idf.py build

    - name: Merge firmware files
      run: |
        . $IDF_PATH/export.sh
        cd build
        python -m esptool --chip esp32c3 merge-bin \
          -o blufi_demo_${{ matrix.device_config.name }}_merged.bin \
          --flash-mode dio \
          --flash-freq 80m \
          --flash-size 2MB \
          0x0 bootloader/bootloader.bin \
          0x8000 partition_table/partition-table.bin \
          0x10000 blufi_demo.bin
        
        # 显示文件信息
        ls -la blufi_demo_${{ matrix.device_config.name }}_merged.bin

    - name: Upload firmware artifact
      uses: actions/upload-artifact@v4
      with:
        name: firmware-${{ matrix.device_config.name }}
        path: |
          build/blufi_demo_${{ matrix.device_config.name }}_merged.bin
          build/blufi_demo.bin
          build/bootloader/bootloader.bin
          build/partition_table/partition-table.bin
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: firmware-files

    - name: Create release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          firmware-files/firmware-TD01/build/blufi_demo_TD01_merged.bin
          firmware-files/firmware-DIANJI/build/blufi_demo_DIANJI_merged.bin
          firmware-files/firmware-QTZ/build/blufi_demo_QTZ_merged.bin
          firmware-files/firmware-ZIDONGSUO/build/blufi_demo_ZIDONGSUO_merged.bin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload firmware summary
      run: |
        echo "## Firmware Build Summary" > firmware_summary.md
        echo "" >> firmware_summary.md
        echo "Built firmware for the following device types:" >> firmware_summary.md
        echo "" >> firmware_summary.md
        for device in TD01 DIANJI QTZ ZIDONGSUO; do
          if [ -f "firmware-files/firmware-${device}/build/blufi_demo_${device}_merged.bin" ]; then
            size=$(stat -c%s "firmware-files/firmware-${device}/build/blufi_demo_${device}_merged.bin" 2>/dev/null || echo "Unknown")
            echo "- **${device}**: blufi_demo_${device}_merged.bin (${size} bytes)" >> firmware_summary.md
          fi
        done
        
        cat firmware_summary.md